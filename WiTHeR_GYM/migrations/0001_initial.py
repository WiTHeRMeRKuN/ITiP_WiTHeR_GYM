# Generated by Django 4.1.4 on 2022-12-25 11:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abonement',
            fields=[
                ('name_abonement', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Название абонемента')),
                ('number_of_visits', models.IntegerField(verbose_name='Количество посещений')),
                ('number_of_days', models.IntegerField(verbose_name='Количество дней')),
            ],
            options={
                'verbose_name': 'Абонемент',
                'verbose_name_plural': 'Абонементы',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('surname_c', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Фамилия клиента')),
                ('name_c', models.CharField(max_length=15, verbose_name='Имя клиента')),
                ('patronymic_c', models.CharField(max_length=15, verbose_name='Отчество клиента')),
                ('birthdate_c', models.DateField(verbose_name='Дата рождения клиента')),
                ('phonenumber_c', models.CharField(max_length=12, verbose_name='Номер телефона клиента')),
                ('sex_c', models.CharField(max_length=5, verbose_name='Пол клиента')),
                ('address_c', models.CharField(max_length=100, verbose_name='Адрес клиента')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Employes',
            fields=[
                ('surname_e', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Фамилия тренера')),
                ('name_e', models.CharField(max_length=15, verbose_name='Имя тренера')),
                ('patronymic_e', models.CharField(max_length=15, verbose_name='Отчество тренера')),
                ('birthdate_e', models.DateField(verbose_name='Дата рождения тренера')),
                ('address_e', models.CharField(max_length=100, verbose_name='Адрес тренера')),
                ('salary_e', models.IntegerField(verbose_name='Оклад клиента')),
            ],
            options={
                'verbose_name': 'Тренер',
                'verbose_name_plural': 'Тренеры',
            },
        ),
        migrations.CreateModel(
            name='Premises',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('premises', models.CharField(max_length=30, verbose_name='Помещение')),
            ],
            options={
                'verbose_name': 'Помещение',
                'verbose_name_plural': 'Помещения',
            },
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Цена',
                'verbose_name_plural': 'Цены',
            },
        ),
        migrations.CreateModel(
            name='SaleAbonements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата активации абонемента')),
                ('finish_date', models.DateField(verbose_name='Дата деактивации абонемента')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.client', verbose_name='Клиент')),
                ('name_abonement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.abonement', verbose_name='Абонемент')),
            ],
            options={
                'verbose_name': 'Продажа абонемента',
                'verbose_name_plural': 'Продажа абонементов',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_r', models.DateField(verbose_name='Дата тренировки')),
                ('start_time', models.TimeField(verbose_name='Время начала тренировки')),
                ('finish_time', models.TimeField(verbose_name='Время окончания тренировки')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.employes', verbose_name='Тренер')),
                ('premises', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.premises', verbose_name='Помещение')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписание',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('service', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='TypesOfTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_training', models.CharField(max_length=50, verbose_name='Тип тренировки')),
            ],
            options={
                'verbose_name': 'Тип тренировки',
                'verbose_name_plural': 'Типы тренировок',
            },
        ),
        migrations.CreateModel(
            name='TrackingVisits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.saleabonements', verbose_name='Продажа абонемента')),
                ('schedule_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.schedule', verbose_name='Расписание')),
            ],
            options={
                'verbose_name': 'Учёт посещений',
                'verbose_name_plural': 'Учёт посещений',
            },
        ),
        migrations.CreateModel(
            name='SpecEmployes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.employes', verbose_name='Тренер')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.services', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Тренер - Услуга',
                'verbose_name_plural': 'Тренеры - Услуги',
            },
        ),
        migrations.AddField(
            model_name='services',
            name='type_training',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.typesoftraining', verbose_name='Тип тренировки'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.services', verbose_name='Услуга'),
        ),
        migrations.AddField(
            model_name='abonement',
            name='price',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WiTHeR_GYM.pricelist', verbose_name='Цена'),
        ),
    ]
